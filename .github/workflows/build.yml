name: Build and Release
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: win-x64
            extension: .exe
            os_name: Windows
          - os: ubuntu-latest
            runtime: linux-x64
            extension: ""
            os_name: Linux
          - os: macos-latest
            runtime: osx-x64
            extension: ""
            os_name: Mac
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Publish
      run: |
        dotnet publish --configuration Release --runtime ${{ matrix.runtime }} --self-contained true --output ./build -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
    
    - name: Create folder and move files
      shell: bash
      run: |
        mkdir ${{ matrix.os_name }}
        mv ./build/* ./${{ matrix.os_name }}/
    
    - name: Create Archive (Windows)
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        Compress-Archive -Path ${{ matrix.os_name }} -DestinationPath ${{ matrix.os_name }}.zip
    
    - name: Create Archive (Linux/macOS)  
      if: matrix.os != 'windows-latest'
      run: |
        zip -r ${{ matrix.os_name }}.zip ${{ matrix.os_name }}
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os_name }}-build
        path: ${{ matrix.os_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Windows.zip
          Linux.zip
          Mac.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
